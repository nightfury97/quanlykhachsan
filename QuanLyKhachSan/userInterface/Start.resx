<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>